
Kubefaas Specs
=============

This is a set of specifications for a Kubefaas app.  This includes functions,
environments, and triggers; we collectively call these things "resources".

How to use these specs
----------------------

These specs are handled with the 'kubefaas spec' command.  See 'kubefaas spec --help'.

'kubefaas spec apply' will "apply" all resources specified in this directory to your
cluster.  That means it checks what resources exist on your cluster, what resources are
specified in the specs directory, and reconciles the difference by creating, updating or
deleting resources on the cluster.

'kubefaas spec apply' will also package up your source code (or compiled binaries) and
upload the archives to the cluster if needed.  It uses 'ArchiveUploadSpec' resources in
this directory to figure out which files to archive.

You can use 'kubefaas spec apply --watch' to watch for file changes and continuously keep
the cluster updated.

You can add YAMLs to this directory by writing them manually, but it's easier to generate
them.  Use 'kubefaas function create --spec' to generate a function spec,
'kubefaas environment create --spec' to generate an environment spec, and so on.

You can edit any of the files in this directory, except 'kubefaas-deployment-config.yaml',
which contains a UID that you should never change.  To apply your changes simply use
'kubefaas spec apply'.

kubefaas-deployment-config.yaml
------------------------------

kubefaas-deployment-config.yaml contains a UID.  This UID is what kubefaas uses to correlate
resources on the cluster to resources in this directory.

All resources created by 'kubefaas spec apply' are annotated with this UID.  Resources on
the cluster that are _not_ annotated with this UID are never modified or deleted by
kubefaas.

